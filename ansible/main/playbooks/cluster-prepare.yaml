---
- name: Prepare System
  hosts: kubernetes
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Packages
      block:
        - name: Packages | Install common packages
          ansible.builtin.apt:
            name: apt-transport-https,ca-certificates,conntrack,curl,dirmngr,gdisk,
              gnupg,hdparm,htop,iperf3,iptables,iputils-ping,ipvsadm,
              libseccomp2,lm-sensors,neofetch,net-tools,nfs-common,nvme-cli,open-iscsi,parted,psmisc,python3,
              python3-apt,python3-openshift,python3-kubernetes,python3-yaml,smartmontools,socat,software-properties-common,
              unzip,util-linux
              #i965-va-driver-shaders,intel-gpu-tools,intel-media-va-driver-non-free,
            install_recommends: false

    - name: User Configuration
      block:
        - name: User Configuration | SSH keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "https://github.com/{{ github_username }}.keys"
        - name: User Configuration | Silence login
          ansible.builtin.file:
            dest: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.hushlogin"
            state: touch
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"
            modification_time: preserve
            access_time: preserve
        - name: User Configuration | Add user to sudoers
          when: ansible_user != 'root'
          ansible.builtin.copy:
            content: "{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
            dest: "/etc/sudoers.d/{{ ansible_user }}"
            owner: root
            group: root
            mode: "0440"

    - name: Zsh | Download and install Nerd Fonts
      block:
        - name: Zsh | Download Nerd Fonts
          ansible.builtin.get_url:
            url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/FiraCode.zip"
            dest: "/tmp/FiraCode.zip"
        - name: Zsh | Extract Nerd Fonts
          ansible.builtin.unarchive:
            src: "/tmp/FiraCode.zip"
            dest: "/tmp"
            remote_src: yes
        - name: Zsh | Install Nerd Fonts
          ansible.builtin.file:
            src: "/tmp/Fira Code Nerd Font Complete.ttf"
            dest: "/usr/local/share/fonts/Fira Code Nerd Font Complete.ttf"
            state: link
        - name: Zsh | Clean up downloaded files
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/tmp/FiraCode.zip"
            - "/tmp/Fira Code Nerd Font Complete.ttf"
        - name: Zsh | Install zsh
          ansible.builtin.apt:
            name: zsh
            install_recommends: false
        - name: Zsh | Set as default shell
          ansible.builtin.user:
            name: "{{ ansible_user }}"
            shell: /usr/bin/zsh
        - name: Zsh | Install Oh-My-Zsh
          ansible.builtin.shell:
            cmd: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
            args:
              creates: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.oh-my-zsh"
        - name: Zsh | Install Powerlevel10k theme
          ansible.builtin.git:
            repo: 'https://github.com/romkatv/powerlevel10k.git'
            dest: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.oh-my-zsh/custom/themes/powerlevel10k"
            depth: 1
        - name: Zsh | Configure .zshrc
          ansible.builtin.lineinfile:
            path: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.zshrc"
            regexp: '^ZSH_THEME='
            line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
        - name: Zsh | Configure plugins
          ansible.builtin.lineinfile:
            path: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.zshrc"
            regexp: '^plugins='
            line: 'plugins=(git docker kubectl npm yarn)'
        - name: Zsh | Copy .p10k.zsh configuration file
          ansible.builtin.copy:
            src: "~/.p10k.zsh"
            dest: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.p10k.zsh"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"
        - name: Append to zshrc
          ansible.builtin.blockinfile:
            path: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.zshrc"
            block: |
              function k() {
                  kubectl "$@"
              }
              # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
              [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

              # Change the highlighting for LS for OTHER_WRITABLE
              LS_COLORS="ow=37;44:$LS_COLORS"
              export LS_COLORS

              # Set default editor to nano
              export EDITOR=nano
            create: yes
            marker: "# {mark} ANSIBLE MANAGED BLOCK"
            block_end: "kubectl shorthand"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0755"

    - name: System Configuration
      notify: Reboot
      block:
        - name: System Configuration | NFS
          ansible.builtin.copy:
            src: files/nfsmount.conf
            dest: /etc/nfsmount.conf
            owner: root
            group: root
            mode: "0644"
        - name: System Configuration | Disable apparmor
          ansible.builtin.systemd:
            name: apparmor
            state: stopped
            masked: true
        - name: System Configuration | Disable swap
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop: ["none", "swap"]
        - name: System Configuration | Create Kernel modules
          ansible.builtin.copy:
            dest: "/etc/modules-load.d/{{ item }}.conf"
            mode: "0644"
            content: "{{ item }}"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd", "tcp_bbr"]
          register: modules_status
        - name: System Configuration | Reload Kernel modules # noqa: no-changed-when no-handler
          when: modules_status.changed
          ansible.builtin.systemd:
            name: systemd-modules-load
            state: restarted
        - name: System Configuration | Sysctl
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192
        - name: System Configuration | Grub (1)
          ansible.builtin.replace:
            path: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.key | regex_escape }}=).)*)(?:[" ]{{ item.key | regex_escape }}=\S+)?(.*")$'
            replace: '\1 {{ item.key }}={{ item.value }}\2'
          with_dict: "{{ grub_config }}"
          vars:
            grub_config:
              apparmor: "0"
              mitigations: "off"
          register: grub_status
        - name: System Configuration | Grub (2) # noqa: no-changed-when no-handler
          when: grub_status.changed
          ansible.builtin.command: update-grub

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
